<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.zhwei.mapper.OrderMapper">
	<resultMap id="BaseResultMap" type="edu.zhwei.pojo.Order">
		<id column="order_id" property="orderId" jdbcType="INTEGER" />
		<result column="order_user_name" property="orderUserName"
			jdbcType="VARCHAR" />
		<result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
		<result column="order_accept" property="orderAccept" jdbcType="INTEGER" />
		<result column="order_tel" property="orderTel" jdbcType="VARCHAR" />
		<result column="order_addr" property="orderAddr" jdbcType="VARCHAR" />
		<result column="order_price" property="orderPrice" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		order_id, order_user_name, order_time, order_accept, order_tel, order_addr,
		order_price
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="edu.zhwei.pojo.OrderExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from `order`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from `order`
		where order_id = #{orderId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from `order`
		where order_id = #{orderId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="edu.zhwei.pojo.OrderExample">
		delete from `order`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="orderId" parameterType="edu.zhwei.pojo.Order">
		insert into `order` (order_id, order_user_name, order_time,
		order_accept, order_tel, order_addr,
		order_price)
		values (#{orderId,jdbcType=INTEGER}, #{orderUserName,jdbcType=VARCHAR},
		#{orderTime,jdbcType=TIMESTAMP},
		#{orderAccept,jdbcType=INTEGER}, #{orderTel,jdbcType=VARCHAR}, #{orderAddr,jdbcType=VARCHAR},
		#{orderPrice,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="orderId" parameterType="edu.zhwei.pojo.Order">
		insert into `order`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				order_id,
			</if>
			<if test="orderUserName != null">
				order_user_name,
			</if>
			<if test="orderTime != null">
				order_time,
			</if>
			<if test="orderAccept != null">
				order_accept,
			</if>
			<if test="orderTel != null">
				order_tel,
			</if>
			<if test="orderAddr != null">
				order_addr,
			</if>
			<if test="orderPrice != null">
				order_price,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="orderUserName != null">
				#{orderUserName,jdbcType=VARCHAR},
			</if>
			<if test="orderTime != null">
				#{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderAccept != null">
				#{orderAccept,jdbcType=INTEGER},
			</if>
			<if test="orderTel != null">
				#{orderTel,jdbcType=VARCHAR},
			</if>
			<if test="orderAddr != null">
				#{orderAddr,jdbcType=VARCHAR},
			</if>
			<if test="orderPrice != null">
				#{orderPrice,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="edu.zhwei.pojo.OrderExample"
		resultType="java.lang.Integer">
		select count(*) from `order`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update order
		<set>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=INTEGER},
			</if>
			<if test="record.orderUserName != null">
				order_user_name = #{record.orderUserName,jdbcType=VARCHAR},
			</if>
			<if test="record.orderTime != null">
				order_time = #{record.orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.orderAccept != null">
				order_accept = #{record.orderAccept,jdbcType=INTEGER},
			</if>
			<if test="record.orderTel != null">
				order_tel = #{record.orderTel,jdbcType=VARCHAR},
			</if>
			<if test="record.orderAddr != null">
				order_addr = #{record.orderAddr,jdbcType=VARCHAR},
			</if>
			<if test="record.orderPrice != null">
				order_price = #{record.orderPrice,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update order
		set order_id = #{record.orderId,jdbcType=INTEGER},
		order_user_name = #{record.orderUserName,jdbcType=VARCHAR},
		order_time = #{record.orderTime,jdbcType=TIMESTAMP},
		order_accept = #{record.orderAccept,jdbcType=INTEGER},
		order_tel = #{record.orderTel,jdbcType=VARCHAR},
		order_addr = #{record.orderAddr,jdbcType=VARCHAR},
		order_price = #{record.orderPrice,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="edu.zhwei.pojo.Order">
		update order
		<set>
			<if test="orderUserName != null">
				order_user_name = #{orderUserName,jdbcType=VARCHAR},
			</if>
			<if test="orderTime != null">
				order_time = #{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderAccept != null">
				order_accept = #{orderAccept,jdbcType=INTEGER},
			</if>
			<if test="orderTel != null">
				order_tel = #{orderTel,jdbcType=VARCHAR},
			</if>
			<if test="orderAddr != null">
				order_addr = #{orderAddr,jdbcType=VARCHAR},
			</if>
			<if test="orderPrice != null">
				order_price = #{orderPrice,jdbcType=INTEGER},
			</if>
		</set>
		where order_id = #{orderId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="edu.zhwei.pojo.Order">
		update order
		set order_user_name = #{orderUserName,jdbcType=VARCHAR},
		order_time = #{orderTime,jdbcType=TIMESTAMP},
		order_accept = #{orderAccept,jdbcType=INTEGER},
		order_tel = #{orderTel,jdbcType=VARCHAR},
		order_addr = #{orderAddr,jdbcType=VARCHAR},
		order_price = #{orderPrice,jdbcType=INTEGER}
		where order_id = #{orderId,jdbcType=INTEGER}
	</update>
</mapper>